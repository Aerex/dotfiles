#!/bin/env bash

if [[ -z $(command -v jq) ]]; then
  "ERROR: Missing jq"
  exit 1
fi

ghcli_rl_json=$(mktemp /tmp/XXXXXXX_ghcli_rl.json)
curl --silent 'https://api.github.com/repos/cli/cli/releases/latest' > $ghcli_rl_json

# if not install get gh
dl_url=$(cat $ghcli_rl_json | jq -r '.assets[] | select(.name | contains("linux_amd64.tar.gz")).browser_download_url')

ver=$(cat $ghcli_rl_json | jq -r  '.tag_name' | sed -E 's/v//g')
pushd /tmp 1>/dev/null
wget $dl_url -O ghcli.tar.gz
tar -xvf ghcli.tar.gz 
cd gh_"$ver"_linux_amd64
sudo mv bin/gh /usr/local/bin
if [[ ! -d /usr/local/share/licenses/gh ]]; then
  sudo mkdir /usr/local/share/licenses/gh
fi
sudo mv LICENSE /usr/local/share/licenses/gh
sudo mv share/man/man1/* /usr/share/man/man1/
popd 1>/dev/null

if [[ -z $(command -v gh) ]]; then
  echo "could not find gh after update" 
  exit 1
fi

installed_ver=$(gh version | head -n 1 | awk -F ' ' '{print $3}')

if [[ $installed_ver != "$ver" ]]; then
  echo "Mismatch version. Expected to install $ver but got $installed_ver"
  exit 1
fi

# vim: ft=bash
