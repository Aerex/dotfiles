# ================ Settings ==================== {{{

set -sg escape-time 0
set -g default-terminal "screen-256color" #make tmux display things in 256 colors
unbind C-b
set -g prefix C-a
bind C-a send-prefix
unbind-key y


#set -g focus-events on
set -g history-limit 50000

set -g mouse on

set -g visual-bell off #enable visual bell
set -g visual-silence off #enable visual silence
set -g visual-activity off #enable visual activity
bind-key a send-prefix

set-option -g renumber-windows on
#}}}

# ================ Copy ==================== {{{

# vim keys in copy and choose mode
set-window-option -g mode-keys vi
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

unbind-key K
bind-key K send-keys -R \; send-keys C-l \; clear-history


bind-key C-M-w command-prompt -p "Swap Current Window To? (e.g 3; 4; session_name:5)" "swap-window -t '%%'"
bind-key C-M-p command-prompt -p "Swap Current Pane To? (e.g 2.0; session_name:4.0)" "swap-pane -t '%%'"
bind-key M-p command-prompt -p "Move Current Pane To? (e.g 3.1; session_name:6.0)" "move-pane -t '%%'"
# Credits to https://github.com/gotbletu/shownotes/blob/master/tmux_choose_tree_interactively.md
bind-key W choose-tree -Zw "swap-window -t '%%'; display-message \"Move window to '%%'\""
#bind-key P choose-tree -Zw "swap-pane -t '%%'"
#bind-key C-p choose-tree -Zw "move-pane -t '%%'"

# bind-key C-M-w command-prompt -p "Swap Current Window To? (e.g 3; 4; session_name:5)" "swap-window -t '%%'"
# bind-key C-M-p command-prompt -p "Swap Current Pane To? (e.g 2.0; session_name:4.0)" "swap-pane -t '%%'"
#bind-key M-p command-prompt -p "Move Current Pane To? (e.g 3.1; session_name:6.0)" "move-pane -t '%%'"

# Send To Tmux Clipboard or System Clipboard
#run-shell "tmux setenv -g OS $(uname -s | sed 's/\\n//g')"
#if-shell -b '[ "$(echo "$OS = Darwin" | bc)" = 1 ]' \
#	'bind-key < run-shell "tmux set-buffer -- \"$(pbpaste)\"" \; display-message "Copy To Tmux Clipboard"'\
#	'bind-key > run-shell "tmux show-buffer | pbcopy" \; display-message "Copy To System Clipboard"'\
#bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"
# Send To Tmux Clipboard or System Clipboard
#run-shell "tmux setenv -g OS $(uname -s | sed 's/\\n//g')"
#if-shell -b '[ "$(echo "$OS = Darwin" | bc)" = 1 ]' \
#	'bind-key < run-shell "tmux set-buffer -- \"$(pbpaste)\"" \; display-message "Copy To Tmux Clipboard"'\
#	'bind-key > run-shell "tmux show-buffer | pbcopy" \; display-message "Copy To System Clipboard"'

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
## Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
#bind-key -T copy-mode-vi v send-keys -X begin-selection; 
#bind-key -T copy-mode-vi V send-keys -X select-line; 
#bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; 
#bind-key -T choice-mode-vi h send-keys -X tree-collapse ; 
#bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
#bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
#bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \

bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xsel --clipboard --input"; \
unbind-key -T copy-mode-vi Enter 
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "xsel --clipboard --input"
bind-key -T copy-mode-vi 'O' send-keys -X copy-selection \; new-window -n qutebrowser \; send-keys -t qutebrowser 'qutebrowser "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind -T copy-mode-vi / command-prompt -p "search down" "send-keys -X search-forward \"%%%\""
bind -T copy-mode-vi ? command-prompt -p "search up" "send-keys -X search-backward \"%%%\""
# use vim as copy mode
#bind-key v capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "vim-copymode" '$SHELL -c "vim /tmp/tmux-buffer"'

# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v

#}}}
# ================ Mouse ==================== {{{

# mouse to highlight and copy; to paste use "prefix + ]"
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/

# temporarily allow regular terminal copy mode while mouse mode is enable
# visual block: ctrl+mouse <-- (while mouse mode is disable) only works on some terminals

# toggle mouse mode (tmux 2.1 or higher)
# https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/cw552qd
bind-key m set-option -g -q mouse on \; display-message 'Mouse: ON'
bind-key M set-option -g -q mouse off \; display-message 'Mouse: OFF'
#}}}

# ================ Statusbar ==================== {{{
# ================ Window ==================== {{{2
# Credits to https://github.com/atomictom/dotfiles/blob/a211059c1784c6ec59349915250a53a3d6bb0086/.tmux.conf#L181
set -g window-status-current-format '#[fg=#8FBCBB,bg=#282c34]'
set -ga window-status-current-format '#{window_name}(#{window_index})'
set -ga window-status-current-format '#{?window_zoomed_flag,*,}'
set -ga window-status-current-format '#{?window_activity_flag,🔥,}'
set -ga window-status-current-format '#{?window_silence_flag,❄️ ,}'
set -ga window-status-current-format '#{?window_bell_flag,🔔,}'
set -ga window-status-current-format '#[fg=#8FBCBB,bg=#282c34]'

set -g window-status-format '#{window_name}(#{window_index})'
set -ga window-status-format '#{?window_zoomed_flag,*,}'
set -ga window-status-format '#{?window_activity_flag,🔥,}'
set -ga window-status-format '#{?window_silence_flag,❄️ ,}'
set -ga window-status-format '#{?window_bell_flag,🔔,}'

set-option -g status-justify centre
# ================ Left ==================== {{{2
set-option -g status-left-length 40
set-option -g status-left " #[fg=#050613]Session: #S #[fg=#050613](#I,#[fg=#050613]#P)"
#}}}
# ================ Right ==================== {{{2
set-option -g status-right "#[fg=#050613]%a %D %l:%M:%p"
# use "man date" to set the clock to your liking
#}}}
######################
#### Key Bindings ####
######################

bind -r M-k  resize-pane -U 2
bind -r M-j  resize-pane -D 2
bind -r M-h  resize-pane -L 2
bind -r M-l  resize-pane -R 2

bind b run -b 'bash -c $HOME/.tmux/bin/gitbranch'

bind f run-shell -b ~/.tmux/bin/ftwind

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"


#bind-key f run -b 'bash -ci $HOME/.tmux/bin/ftwind'

# quickly open a new window
bind N new-window

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# don't rename windows automatically
set-option -g allow-rename off

# make window/pane index start with 1
set -g base-index 1
set -g pane-base-index 1

# highlight panes
set -g pane-border-style 'none'
set -g pane-active-border-style 'fg=#7e705a'

# don't suspend-client
unbind-key C-z

# fast session switching
unbind S
unbind f

unbind .
bind-key .  command-prompt -p 'Swap current window with?:' 'swap-window -t "%1"'

bind-key f run -b 'bash -ci $HOME/.tmux/bin/ftwind'

######################
###### Plugins #######
######################
# List of plugins
#run-shell "powerline-daemon -q"
#source-file '/Users/noamfo/tmux.powerline.conf'

#set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'laktak/extrakto'

set -g @resurrect-restore 'R'

set -g @resurrect-capture-pane-contents 'on'
#set -g @continuum-boot 'on'

#run-shell "tmux setenv -g OS $(uname -s | sed 's/\\n//g')"
#if-shell -b '[ "$(echo "$OS = Darwin" | bc)" = 1 ]' \
#	"set -g @continuum-boot-options 'iterm2,fullscreen'"
#set -g @continuum-save-interval '60'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
#run-shell '~/.tmux/plugins/tmux-continuum/continuum.tmux'
#run-shell '~/.tmux/plugins/tmux-sessionist/sessionist.tmux'


#unbind S
#set -g @resurrect-save 'S'
